<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tag1 on Hugo Theme Dream</title><link>https://example.com/tags/tag1/</link><description>Recent content in Tag1 on Hugo Theme Dream</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 29 Dec 2024 10:32:31 +0800</lastBuildDate><atom:link href="https://example.com/tags/tag1/index.xml" rel="self" type="application/rss+xml"/><item><title>gRPC</title><link>https://example.com/posts/begin/</link><pubDate>Sun, 29 Dec 2024 10:32:31 +0800</pubDate><guid>https://example.com/posts/begin/</guid><description>&lt;p>gRPC 是Google 于 2016年创建的开源远程过程调用框架，它是对Google内部 RPC 基础设施的重写。但首先，什么是RPC，即远程过程调用？本地过程调用是进程内执行某些代码的函数调用。远程过程调用从用户的角度来看，是使一台机器能够调用另一台机器上的某些代码，就像是本地函数调用一样。&lt;/p>
&lt;p>&lt;img src="https://pub-d4e50142286f4f989ffda66f9f8614d1.r2.dev/pacificrimblog/2024/12/a94ab8f1715e260ef163cb539c69676a.png" alt="image-20241230203914570">&lt;/p>
&lt;p>gRPC 是RPC的一种流行实现。许多组织已采用 gRPC 作为首选RPC 机制来连接在数据中心内和跨数据中心运行的大量微服务。&lt;/p>
&lt;p>What makes gRPC so popular?&lt;/p>
&lt;p>gRPC 拥有蓬勃发展的开发者生态系统。它使得开发具有良好生产质量和可扩展性的类型安全API变得非常容易。该生态系统的核心是使用Protocol Buffers（协议缓冲区）作为其数据交换格式。Protocol Buffers是一种与语言和平台无关的结构化数据编码机制&lt;/p>
&lt;p>&lt;img src="https://pub-d4e50142286f4f989ffda66f9f8614d1.r2.dev/pacificrimblog/2024/12/28497a0477fe3b7113dc1502327eb4c3.png" alt="image-20241230203942557">&lt;/p>
&lt;p>gRPC 默认使用Protocol Buffers来编码并通过网络发送数据。虽然 gRPC 可以支持JSON等其他编码格式，但Protocol Buffers提供了几个优点，使其成为gRPC的首选编码格式。&lt;/p>
&lt;ol>
&lt;li>Protocol Buffers支持强类型架构定义，网络上数据的结构在 proto文件中定义。Protocol Buffers提供广泛的工具支持，将 proto 文件中定义的模式转换为所有流行编程语言的数据访问类。&lt;/li>
&lt;/ol>
&lt;!-- raw HTML omitted -->
&lt;p>gRPC 服务也是通过指定 RPC方法参数和返回类型在 proto 文件中定义的。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>使用相同的工具从 proto 文件生成 gRPC 客户端和服务器代码。开发人员在客户端使用这些生成的类进行RPC调用，并在服务器中完成 RPC 请求。&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>通过支持多种编程语言，客户端和服务器可以独立选择最适合自己特定用例的编程语言和生态系统。传统上，大多数其他 RPC 框架并非如此。&lt;/p>
&lt;p>&lt;img src="https://pub-d4e50142286f4f989ffda66f9f8614d1.r2.dev/pacificrimblog/2024/12/d92e484ea2eb4108f9975193c1ee4207.png" alt="image-20241230205352380">&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>gRPC 如此受欢迎的第二个原因是它开箱即用的高性能。有两个因素影响了其性能。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>首先， Protocol Buffers 是一种非常高效的二进制编码格式。它比JSON快得多。&lt;/p></description></item></channel></rss>